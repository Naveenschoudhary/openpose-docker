FROM nvidia/cuda:12.2.0-cudnn9-devel-ubuntu20.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential cmake git wget curl ca-certificates \
    libboost-all-dev libhdf5-dev libatlas-base-dev libopenblas-dev \
    libgoogle-glog-dev libopencv-dev python3-dev python3-pip python3-setuptools \
    libprotobuf-dev protobuf-compiler unzip pkg-config \
    && rm -rf /var/lib/apt/lists/*

RUN add-apt-repository ppa:deadsnakes/ppa && apt-get update && \
    apt-get install -y python3.12 python3.12-dev python3.12-distutils && \
    ln -s /usr/bin/python3.12 /usr/bin/python && \
    curl -sS https://bootstrap.pypa.io/get-pip.py | python

RUN pip install --no-cache-dir \
    cmake==3.31.2 numpy opencv-python pandas pyzmq setuptools six tzdata wheel zmq

# Install cuDNN manually
RUN wget https://developer.download.nvidia.com/compute/cudnn/9.10.1/local_installers/cudnn-local-repo-ubuntu2004-9.10.1_1.0-1_amd64.deb && \
    dpkg -i cudnn-local-repo-ubuntu2004-9.10.1_1.0-1_amd64.deb && \
    cp /var/cudnn-local-repo-ubuntu2004-9.10.1/cudnn-*-keyring.gpg /usr/share/keyrings/ && \
    apt-get update && apt-get -y install cudnn-cuda-12 && \
    rm cudnn-local-repo-ubuntu2004-9.10.1_1.0-1_amd64.deb

ENV PATH=/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH=/usr/local/cuda-12.2/lib64:${LD_LIBRARY_PATH}
ENV LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libffi.so.7

WORKDIR /openpose
RUN git clone https://github.com/bigpicture-football-aim/aim-openpose.git .
RUN mkdir build

WORKDIR /openpose/build
RUN cmake -DBUILD_PYTHON=ON -DUSE_CUDA=ON -DCMAKE_BUILD_TYPE=Release \
    -DCUDA_ARCH=Auto -DBLAS=Open \
    -DPYTHON_EXECUTABLE=$(which python) \
    -DPYTHON_LIBRARY=$(python -c "import sysconfig; print(sysconfig.get_config_var('LIBDIR') + '/' + sysconfig.get_config_var('INSTSONAME'))") \
    -DPYTHON_INCLUDE_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") ..
RUN make -j$(nproc)

CMD ["./examples/openpose/openpose.bin", "--help"]
